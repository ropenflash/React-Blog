{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","pages/article-content.js","components/ArticlesList.js","pages/NotFound.js","components/CommentsList.js","components/UpvoteSection.js","components/AddCommentForm.js","pages/ArticlePage.jsx","pages/ArticlesListPage.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","react_default","a","createElement","Fragment","AboutPage","articles","name","title","content","ArticlesList","_ref","map","article","key","react_router_dom","className","to","concat","substring","NotFound","CommentsList","comments","comment","text","UpvoteSection","upvotes","articleName","setArticleInfo","upvoteArticle","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee","result","body","wrap","_context","prev","next","fetch","method","sent","json","stop","apply","this","arguments","onClick","AddCommentForm","_useState","useState","_useState2","slicedToArray","username","setUsername","_useState3","_useState4","commentText","setCommentText","addComment","JSON","stringify","headers","Content-Type","type","value","onChange","event","target","rows","cols","ArticlePage","match","params","find","articleInfo","useEffect","fetchData","pages_NotFound","otherArticles","filter","otherArticle","paragraph","components_ArticlesList","ArticleListPage","Navbar","App","src_Navbar_0","react_router","exact","path","component","ArticlesListPage","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d35bc32.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst HomePage=()=>{\r\n    return (\r\n        <React.Fragment>\r\n        \r\n        <h1>Hello, welcome to my blog</h1>\r\n        <p>\r\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam viverra nibh a quam iaculis, \r\n        in mollis diam imperdiet. Nullam eget facilisis nisi. Praesent et turpis elit. Duis sagittis nulla vitae ultricies vestibulum. Phasellus placerat tortor sed orc\r\n        varius aliquet. Aenean felis est, viverra in finibus at, finibus vel mauris. Vestibulum viverra rhoncus tellus, a rhoncus augue auctor ac. Sed interdum elit nulla\r\n        itae placerat est fermentum id. Sed ullamcorper nulla non posuere sollicitudin. Nulla sed enim quis nunc ultrices gravida. Vivamus ut dictum magna.\r\n        </p>\r\n        </React.Fragment>\r\n        \r\n        )\r\n    \r\n    \r\n}\r\n\r\n\r\nexport default HomePage","import React from 'react'\r\n\r\nconst AboutPage=()=>{\r\n    return (\r\n        <React.Fragment>\r\n        \r\n        <h1>About</h1>\r\n      \r\n        </React.Fragment>\r\n        \r\n        )\r\n    \r\n    \r\n}\r\n\r\n\r\nexport default AboutPage","export const articles=[{\r\n    name:'learn-react',\r\n    title:'React Chapter 1',\r\n    content:[\r\n        'explaning types of components understanding state management'\r\n        ]\r\n    },\r\n    {\r\n    name:'learn-redux',\r\n    title:'Chapter 3 Redux',\r\n    content:[\r\n        'Redux explaining limitation of MVC model Actions Dispatch Store and View'\r\n        ]\r\n    },\r\n     {\r\n    name:'underscore',\r\n    title:'functional javascript library',\r\n    content:[\r\n        'amazing library'\r\n        ]\r\n    }\r\n    \r\n    ]","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nconst ArticlesList =({articles})=>{\r\n    return(\r\n   <React.Fragment>\r\n   {articles.map((article,key)=>{\r\n            return(\r\n            \r\n            <Link  key={key} className=\"article\" to={`/article/${article.name}`}>\r\n            <h1>{article.title}</h1>\r\n            <p>{article.content[0].substring(0,150)}......</p>\r\n            </Link>\r\n            \r\n            )\r\n            \r\n        }\r\n        )\r\n            \r\n        }\r\n   </React.Fragment>\r\n    \r\n        )\r\n    \r\n}\r\n\r\nexport default ArticlesList","import React from 'react'\r\n\r\nconst NotFound=()=>{\r\n    return(\r\n        <h1>404: Page not found</h1>\r\n        )\r\n    \r\n}\r\n\r\n\r\nexport default NotFound","import React from 'react'\r\n\r\nexport default function CommentsList({comments}) {\r\n    return (\r\n        <>\r\n        <h3>Comments:</h3>\r\n        {comments.map((comment,key)=>(\r\n            <div key={key} className=\"comment\">\r\n            <h4>{comment.name}</h4>\r\n            <p>{comment.text}</p>\r\n            </div>\r\n        )\r\n        )}\r\n        </>\r\n        )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function UpvoteSection({upvotes,articleName,setArticleInfo}) {\r\n    const upvoteArticle=async()=>{\r\n        const result=await fetch(`/api/articles/${articleName}/upvote`,{\r\n            method:'post'\r\n        })\r\n        const body=await result.json()\r\n        setArticleInfo(body)\r\n    }\r\n    return (\r\n        <div>  \r\n            <button className=\"btn btn-dark btn-secondary\" onClick={upvoteArticle}>Add Upvote</button>\r\n               <span className=\"ml-2\">This post has been upvoted {upvotes} times</span>\r\n          \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function AddCommentForm({articleName,setArticleInfo}) {\r\n    const [username,setUsername]=useState('')\r\n    const [commentText,setCommentText]=useState('')\r\n\r\n    const addComment=async()=>{\r\n        const result=await fetch(`/api/articles/${articleName}/add-comment`,{\r\n            method:'post',\r\n            body:JSON.stringify({name:username,text:commentText}),\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n            }\r\n        })\r\n        const body=await result.json()\r\n        setArticleInfo(body)\r\n        setUsername('')\r\n        setCommentText('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-comment \">\r\n            <h3 className=\"mt-2\">Add Comment</h3>\r\n            <label> \r\n            Name:\r\n            </label>\r\n             <input className=\"ml-5\" type=\"text\" value={username} onChange={(event)=>{setUsername(event.target.value)}}/>          \r\n            \r\n            <br/>\r\n            <label>\r\n               \r\n            Comment: </label>\r\n             <textarea  className=\"ml-4\" rows=\"4\" cols=\"50\" value={commentText} onChange={(event)=>{setCommentText(event.target.value)}}></textarea>\r\n              \r\n              <br/>\r\n              <button className=\"btn btn-dark mb-2\" onClick={addComment}>Add Comment</button>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport {articles} from './article-content'\r\nimport ArticlesList from '../components/ArticlesList'\r\nimport NotFound from './NotFound'\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvoteSection from '../components/UpvoteSection';\r\nimport AddCommentForm from '../components/AddCommentForm';\r\n\r\n\r\n\r\nconst ArticlePage=({match})=>{\r\n    const name=match.params.name\r\n    \r\n    const article=articles.find(article=>(article.name===name\r\n    ))\r\n   \r\n    const [articleInfo,setArticleInfo]=useState({upvotes:0,comments:[]})\r\n\r\n    useEffect(()=>{\r\n        const fetchData=async()=>{\r\n            const result=await fetch(`/api/articles/${name}`)\r\n            const body=await result.json()\r\n           \r\n            setArticleInfo(body)\r\n        }\r\n        fetchData()\r\n      \r\n    },[name])\r\n\r\n    if(!article) return <NotFound/>\r\n    const otherArticles=articles.filter(otherArticle=>otherArticle.name!==article.name)\r\n    return (\r\n        <React.Fragment>\r\n        <h1>{article.title}</h1>\r\n        <UpvoteSection upvotes={articleInfo.upvotes} articleName={name} setArticleInfo={setArticleInfo}/>\r\n        {article.content.map((paragraph,key)=>(<p key={key}>{paragraph}</p>))}\r\n        <CommentsList comments={articleInfo.comments}/>\r\n        <AddCommentForm articleName={name} setArticleInfo={setArticleInfo}/>\r\n        <h3 className=\"mt-2\">Related Articles:</h3>    \r\n        <ArticlesList articles={otherArticles}/>\r\n        </React.Fragment>\r\n        \r\n        )\r\n    \r\n    \r\n}\r\n\r\n\r\nexport default ArticlePage","import React from 'react'\r\nimport {articles} from './article-content'\r\nimport ArticlesList from '../components/ArticlesList'\r\n\r\nconst ArticleListPage=()=>{\r\n    return (\r\n        <React.Fragment>\r\n        \r\n        <h1>Articles</h1>\r\n        <ArticlesList articles={articles}/>\r\n      \r\n        </React.Fragment>\r\n        \r\n        )\r\n    \r\n    \r\n}\r\n\r\n\r\nexport default ArticleListPage","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Navbar.css'\r\n\r\nconst Navbar=()=>{\r\n    \r\n    return(\r\n        <div className=\"container2\">\r\n        <nav>\r\n        <ul >\r\n        <li className=\"navbar-li li\"><Link className=\"anchor anchor-hover\" to=\"/\">Home</Link></li>\r\n        <li className=\"navbar-li li\"><Link className=\"anchor anchor-hover\" to=\"/about\">About</Link></li>\r\n        <li className=\"navbar-li li\"><Link className=\"anchor anchor-hover\" to=\"/articles\">Articles</Link></li>\r\n        </ul>\r\n        </nav>\r\n        </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Navbar","import React from 'react';\r\nimport './App.css';\r\nimport HomePage from './pages/HomePage'\r\nimport AboutPage from './pages/AboutPage'\r\nimport ArticlePage from './pages/ArticlePage'\r\nimport NotFound from './pages/NotFound'\r\nimport ArticlesListPage from './pages/ArticlesListPage'\r\nimport Navbar from './Navbar'\r\nimport {BrowserRouter as Router, Route,Switch} from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar/>\r\n      <div className=\"App\">\r\n      <Switch>\r\n      <Route exact path=\"/\" component={HomePage}/>\r\n      <Route  path=\"/about\" component={AboutPage}/>\r\n      <Route  path=\"/articles\" component={ArticlesListPage}/>\r\n      <Route  path=\"/article/:name\" component={ArticlePage}/>\r\n      <Route component={NotFound}/>\r\n      </Switch>\r\n      </div>\r\n     </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'whatwg-fetch'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}